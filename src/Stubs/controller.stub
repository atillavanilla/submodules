<?php

namespace {{NAMESPACE}}\{{MODULE_NAME}}\Controllers;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use {{NAMESPACE}}\{{MODULE_NAME}}\Models\{{MODULE_NAME}};

class {{CONTROLLER_NAME}} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        ${{VARIABLE_NAME}} = {{MODULE_NAME}}::all();
        
        return view('{{MODULE_NAME_LOWER}}::index', compact('{{VARIABLE_NAME}}'));
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return view('{{MODULE_NAME_LOWER}}::create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'nullable|string',
        ]);

        {{MODULE_NAME}}::create($request->all());

        return redirect()->route('{{MODULE_NAME_KEBAB}}.index')
                         ->with('success', '{{MODULE_NAME}} created successfully.');
    }

    /**
     * Display the specified resource.
     */
    public function show({{MODULE_NAME}} ${{MODULE_NAME_LOWER}})
    {
        return view('{{MODULE_NAME_LOWER}}::show', compact('{{MODULE_NAME_LOWER}}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{MODULE_NAME}} ${{MODULE_NAME_LOWER}})
    {
        return view('{{MODULE_NAME_LOWER}}::edit', compact('{{MODULE_NAME_LOWER}}'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, {{MODULE_NAME}} ${{MODULE_NAME_LOWER}})
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'nullable|string',
        ]);

        ${{MODULE_NAME_LOWER}}->update($request->all());

        return redirect()->route('{{MODULE_NAME_KEBAB}}.index')
                         ->with('success', '{{MODULE_NAME}} updated successfully.');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{MODULE_NAME}} ${{MODULE_NAME_LOWER}})
    {
        ${{MODULE_NAME_LOWER}}->delete();

        return redirect()->route('{{MODULE_NAME_KEBAB}}.index')
                         ->with('success', '{{MODULE_NAME}} deleted successfully.');
    }

    // API Methods
    public function apiIndex()
    {
        return response()->json([
            'success' => true,
            'data' => {{MODULE_NAME}}::all()
        ]);
    }

    public function apiStore(Request $request)
    {
        $request->validate([
            'name' => 'required|string|max:255',
            'description' => 'nullable|string',
        ]);

        ${{MODULE_NAME_LOWER}} = {{MODULE_NAME}}::create($request->all());

        return response()->json([
            'success' => true,
            'message' => '{{MODULE_NAME}} created successfully',
            'data' => ${{MODULE_NAME_LOWER}}
        ], 201);
    }
}